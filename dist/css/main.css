/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;text-decoration:none;color:#fff}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;margin:0;padding:0;width:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:OpenSans-Regular;font-weight:400;font-style:normal;src:url(../fonts/OpenSans-Regular/OpenSans-Regular.woff2) format("woff2"),url(../fonts/OpenSans-Regular/OpenSans-Regular.ttf) format("truetype")}html{font-size:20px}*{-webkit-box-sizing:border-box;box-sizing:border-box}body,div,h1,h2,h3,h4,input,p,ul{margin:0;padding:0}li{list-style:none;color:#fff}.noselect{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.container{max-width:1560px;margin:0 auto;padding-left:30px;padding-right:30px;position:relative;overflow:hidden}header{background:url(../svgSprite/headerWaves.svg) no-repeat;height:971px}.header__backgroundMenu{background-color:#ff5252;padding:17px 0;-webkit-box-shadow:0 3px 9px 0 rgba(0,63,73,.404);box-shadow:0 3px 9px 0 rgba(0,63,73,.404)}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.menu__myHealth{width:173px;height:66px}.menu__googlePlay{width:162px;height:46px;margin-right:20px}.menu__appStore{width:132px;height:46px}.menu__mainLogo{width:190px;height:69px;fill:#fff}.menu__rightWrap{width:570px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.burgerMenu{display:none}.burgerMenu__line{width:30px;height:3px;background-color:#fff;margin:5px}.header__underMenu{height:100%;position:relative}.header__textBlock{padding-top:55px}.header__title{width:700px;height:124px;font-family:OpenSans-Regular;font-size:46px;color:#fff;font-weight:400;line-height:normal}.header__subtitle{width:680px;margin-top:20px;height:99px;font-family:OpenSans-Regular;font-size:20px;line-height:1.7;color:#fff;font-weight:400}.header__problems{width:700px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:60px}.header__problem{width:320px;margin-bottom:30px}.header__problem svg{vertical-align:middle;display:inline-block;width:90px;height:90px}.header__problem p{vertical-align:middle;display:inline-block;width:60%;margin-left:30px;font-family:OpenSans-Regular;font-size:22px;font-weight:400;line-height:normal;color:#fff}.header__storesWrap{display:none}.header__appStore,.header__googlePlay{height:35px}.header__animation{position:absolute;width:50vw;right:0;top:140px}.osSwitcher{position:relative}.osSwitcher__phones{position:relative;width:100%;height:610px}.osSwitcher__ios{position:absolute;width:250px;height:500px;right:15.8vw;top:2.9vw;cursor:pointer}.osSwitcher__ios img{height:100%}.osSwitcher__android{position:absolute;right:3.5vw;width:295px;height:610px;cursor:pointer}.osSwitcher__android img{height:100%}.osSwitcher__switches{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:33%;margin-top:60px;margin-left:51%}.osSwitcher__switch{display:inline-block;text-align:center;color:#757575;font-family:OpenSans-Regular;font-size:24px;cursor:pointer}.osSwitcher__switch:hover{text-shadow:#443f3f 0 0 2px}.osSwitcher__circle{display:inline-block;border:3px solid;width:10px;height:10px;border-radius:50%;margin-bottom:10px}.section1{position:relative;padding-top:30px}.section1__backgroundWrap{position:absolute;width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.section1__svgLeft{margin-top:16.5%;margin-left:-3vw;width:20vw;height:20vw;opacity:.1}.section1__svgRight{margin-top:5.2%;width:22.7vw;height:46.6vw}.section1__title{font-family:OpenSans-Regular;font-size:46px;font-weight:400;color:#ff5252}.section1__possibilities{margin-top:25px}.possibilities{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.possibilities__possibility{position:relative;margin:20px 15px;-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;width:calc(25% - 30px)}.possibilities__icon{display:inline-block;width:65px;height:65px;vertical-align:middle}.possibilities__p{position:relative;display:inline-block;vertical-align:middle;margin-left:6%;max-width:210px;font-family:OpenSans-Regular;font-size:18px;font-weight:400;line-height:normal;color:#212121}.possibilities__possibility_p-mod{position:absolute;display:inline-block;background:-webkit-gradient(linear,left top,right top,from(#f26a35),to(#ee3048));background:linear-gradient(to right,#f26a35,#ee3048);padding:1px 10px;border-radius:9px;right:-37px;top:-8px;color:#fff;font-family:OpenSans-Regular;font-weight:400;font-size:11px;letter-spacing:1.1}.section1__appWrap{height:980px;position:relative;padding-top:20px}.section1__list{margin-top:225px;width:30%}.listOfInterfaces__title{font-family:OpenSans-Regular;font-size:46px;font-weight:400;line-height:normal;color:#ff8a65}.listOfInterfaces__list{margin-top:40px}.listOfInterfaces__item div{display:inline-block;background-color:#ff8b67;width:8px;height:8px;border-radius:50%}.listOfInterfaces__item p{margin-left:20px;display:inline-block;vertical-align:middle;font-family:OpenSans-Regular;font-size:18px;font-weight:400;line-height:2;color:#757575}.section1__slider{right:90px;top:155px;width:810px;height:710px}.GnativeCarousel{position:absolute}.GnativeCarousel__staticItem{position:absolute;top:0;border-radius:45px;background-color:rgba(128,128,128,.589);-webkit-box-shadow:0 0 40px 5px rgba(85,85,85,.788);box-shadow:0 0 40px 5px rgba(85,85,85,.788);width:340px;height:710px}.GnativeCarousel__itemsContainer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;top:0;width:100%;height:100%}.GnativeCarousel__itemsContainer img{position:absolute;border-radius:30px;width:320px;height:645px}.GnativeCarousel__buttons{position:absolute;top:50%;left:10%;width:80%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}.GnativeCarousel__button{display:inline-block;background-color:red;width:82px;height:82px;border-radius:50%;text-align:center;cursor:pointer;-webkit-transition:background-color .2s,-webkit-box-shadow .2s;transition:box-shadow .2s,background-color .2s,-webkit-box-shadow .2s}.GnativeCarousel__button:hover{-webkit-box-shadow:0 0 10px 1px #555151;box-shadow:0 0 10px 1px #555151}.GnativeCarousel__button:active{-webkit-box-shadow:none;box-shadow:none;background-color:rgba(219,25,25,.486)}.GnativeCarousel__button svg{width:50px;height:25px;margin-top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}footer{background-color:#e9e9e9;padding:20px 0}.footerWrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__logo{fill:#dbdbdb;width:190px;height:60px}.footer__copyrightWrap p{font-family:OpenSans-Regular;font-size:14px;font-weight:400;line-height:normal;text-align:right;color:#dbdbdb}@media screen and (max-width:1360px){header{height:120vw;max-height:1020px}.header__title{width:70%;height:auto;font-size:3.5vw}.header__subtitle{width:50%;font-size:1.5vw}.header__problems{width:45%}.header__problem{width:50%}.header__problem svg{width:27%}.header__problem p{margin-left:15px;width:calc(77% - 40px);font-size:1.5vw}.header__animation{top:180px}.osSwitcher__phones{height:45.9vw}.osSwitcher__ios{width:19.1vw;height:38vw;right:22.5vw;top:3.6vw}.osSwitcher__android{width:22.1vw;height:45.9vw;right:5vw}.osSwitcher__switches{width:45%;margin-top:50px;margin-left:30%}.section1__svgLeft{margin-top:28%}.section1__svgRight{margin-top:30%}.possibilities__possibility{width:calc(33.33333% - 30px)}.section1__appWrap{height:900px}.listOfInterfaces__title{font-size:34px}.listOfInterfaces__list{margin-top:20px}.section1__slider{width:688px;height:603px;right:0}.GnativeCarousel__staticItem{width:289px;height:603px}.GnativeCarousel__itemsContainer img{width:272px;height:548px}}@media screen and (max-width:1100px){header{height:110vw;max-height:950px}.header__textBlock{padding-top:40px}.header__title{width:85%;height:auto;font-size:38px}.header__subtitle{width:75%;font-size:16px}.header__problems{margin-top:0}.header__problem{width:80%}.header__problem svg{width:22%}.header__problem p{font-size:1.8vw}.header__animation{top:220px}.section1__svgLeft{margin-top:46%}.possibilities{-ms-flex-pack:distribute;justify-content:space-around}.possibilities__possibility{width:calc(41.66667% - 30px)}.section1__appWrap{height:720px}.section1__list{width:35%;margin-top:150px}.listOfInterfaces__title{font-size:28px}.listOfInterfaces__item p{margin-left:10px;font-size:17px}.section1__slider{width:584px;height:512px;right:0;top:100px}.GnativeCarousel__staticItem{width:245px;height:512px}.GnativeCarousel__itemsContainer img{width:231px;height:465px}}@media screen and (max-width:960px){header{height:120vw;max-height:945px}.menu__myHealth{width:130px}.menu__googlePlay{width:120px}.menu__appStore{width:100px}.menu__mainLogo{width:160px}.menu__rightWrap{width:70%}.burgerMenu{display:block}.header__title{font-size:34px}.header__subtitle{width:65%}.header__problems{margin-top:30px}.header__problem{width:100%}.header__problem svg{width:18%;height:7.5vw}.header__problem p{font-size:2vw}.header__animation{right:0;top:210px}.osSwitcher__phones{height:55vw}.osSwitcher__ios{width:22vw;height:45.5vw;top:4.5vw;right:24vw}.osSwitcher__android{width:27vw;height:55vw;right:3vw}.osSwitcher__switches{width:52%;margin-left:25%}.section1__backgroundWrap{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.section1__svgLeft{display:none}.section1__svgRight{margin-top:75%}.possibilities__p{width:50%}.section1__appWrap{height:1070px}.section1__list{margin-top:100px;width:100%}.listOfInterfaces__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.listOfInterfaces__item{width:45%}.listOfInterfaces__item p{font-size:16px;width:90%}.section1__slider{width:730px;height:640px;right:auto;top:auto;bottom:70px;left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}.GnativeCarousel__staticItem{width:306px;height:640px}.GnativeCarousel__itemsContainer img{width:288px;height:581px}}@media screen and (max-width:768px){.container{padding-left:15px;padding-right:15px}header{background:url(../svgSprite/headerWavesSm.svg) no-repeat;height:109vw;min-height:645px;max-height:755px}.header__backgroundMenu{padding:5px 0}.menu__myHealth{width:100px;height:45px}.menu__googlePlay{width:90px;height:25px;margin-right:0}.menu__appStore{width:75px;height:25px}.menu__mainLogo{width:120px;height:45px}.menu__rightWrap{width:65%}.header__textBlock{padding-top:25px}.header__title{font-size:24px}.header__subtitle{width:80%;margin-top:10px}.header__problems{margin-top:5px}.header__problem{margin-bottom:15px}.header__problem p{font-size:2.3vw}.header__animation{top:180px}.osSwitcher__phones{height:57vw}.osSwitcher__ios{width:22.7vw;height:47vw;right:20.5vw;top:4.5vw}.osSwitcher__android{width:27vw;height:57vw;right:0}.osSwitcher__switches{width:54%;margin-left:27%;margin-top:40px}.osSwitcher__switch{font-size:16px}.osSwitcher__circle{font-size:16px;border:2px solid;width:8px;height:8px}.section1{padding-top:20px}.section1__svgRight{margin-top:67%}.section1__title{font-size:28px}.possibilities{margin-top:15px}.possibilities__possibility{width:calc(50% - 30px);margin:15px 0}.possibilities__icon{width:45px;height:45px}.possibilities__p{font-size:16px;margin-left:4%;width:75%}.possibilities__possibility_p-mod{right:10%;top:-10px}.section1__appWrap{height:135vw;min-height:840px;max-height:990px}.section1__list{width:100%;margin-top:25px}.listOfInterfaces__title{width:80%}.listOfInterfaces__list{margin-top:15px}.listOfInterfaces__item{width:50%;height:30px}.listOfInterfaces__item div{width:5px;height:5px}.listOfInterfaces__item p{line-height:1.2}.section1__slider{width:95vw;height:83.3vw;bottom:50px}.GnativeCarousel__staticItem{width:39.8vw;height:83.3vw}.GnativeCarousel__itemsContainer img{width:37.5vw;height:75.6vw}.footer__logo{width:119px;height:37px}}@media screen and (max-width:560px){.container{padding-left:15px;padding-right:15px}header{height:214vw;min-height:980px;max-height:1070px;background-position-y:50px}.menu__myHealth{width:90px;height:40px}.menu__googlePlay{width:85px}.menu__appStore{width:70px}.menu__mainLogo{width:125px;height:45px}.menu__rightWrap{width:auto}.burgerMenu,.menu__storesWrap{display:none}.burgerMenu__line{width:25px;height:3px}.header__title{width:100%;font-size:22px}.header__problems,.header__subtitle{width:100%}.header__problem svg{width:45px;height:45px}.header__problem p{font-size:2.8vw}.header__storesWrap{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around}.header__animation{top:500px;width:100%}.osSwitcher__phones{height:77vw}.osSwitcher__ios{width:30vw;height:64vw;right:44vw;top:6vw}.osSwitcher__android{width:38.5vw;height:77vw;right:13.5vw}.osSwitcher__switches{width:45%}.section1__svgRight{margin-top:72%}.section1__title{font-size:22px;text-align:center}.possibilities__possibility{width:calc(100% - 30px);margin:5px 0}.possibilities__p{max-width:70%}.section1__appWrap{height:170vw;min-height:770px;max-height:880px}.listOfInterfaces__title{width:100%;font-size:22px}.listOfInterfaces__item{width:100%}.GnativeCarousel__buttons{width:90%;left:5%}footer{padding:10px 0}.footer__copyrightWrap p{font-size:12px}}@media screen and (max-width:420px){.container{padding-left:15px;padding-right:15px}header{height:311vw;min-height:1025px;max-height:1130px}.header__backgroundMenu{-webkit-box-shadow:none;box-shadow:none;background-color:#f17a58;padding:18px 0}.menu__myHealth{width:120px;height:42px}.header__textBlock{padding-top:0}.header__title{line-height:1.23}.header__subtitle{line-height:normal;margin-top:5px}.header__problems{margin-top:35px}.header__problem p{font-size:14px}.header__storesWrap{margin-top:5px}.header__animation{top:540px;width:100%}.osSwitcher__phones{height:100vw}.osSwitcher__ios{width:39vw;height:82vw;top:8vw;right:40vw}.osSwitcher__android{width:47vw;height:100vw;right:4vw}.osSwitcher__switches{width:55%;margin-left:24%}.section1__svgRight{margin-top:100%}.section1__appWrap{height:750px;min-height:750px}.listOfInterfaces__item p{font-size:14px}.GnativeCarousel__buttons{display:none}.GnativeCarousel__button{width:60px;height:60px}.footer__logo{display:none}.footer__copyrightWrap p{text-align:left}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
