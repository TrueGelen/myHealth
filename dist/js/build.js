/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./source/js/headerAnimations.js":
/*!***************************************!*\
  !*** ./source/js/headerAnimations.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__);\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nwindow.addEventListener('load', function () {\n  console.log('headerAnimations.js is working');\n  /* global variables */\n  //to disable/enable the ability to start animation on click\n\n  var switchFlag = false;\n  var android = {};\n  android.switcher = document.querySelector('#osSwitcher__switch-android');\n  android.circle = android.switcher.querySelector('div');\n  android.text = android.switcher.querySelector('p');\n  android.phone = document.querySelector('#osSwitcher__android');\n  android.isShow = true;\n  android.name = 'android';\n  var ios = {};\n  ios.switcher = document.querySelector('#osSwitcher__switch-ios');\n  ios.circle = ios.switcher.querySelector('div');\n  ios.text = ios.switcher.querySelector('p');\n  ios.phone = document.querySelector('#osSwitcher__ios');\n  ios.isShow = false;\n  ios.name = 'ios';\n  var showOptions = {\n    width: null,\n    height: null,\n    fontWeight: 'bold',\n    background: '#757575',\n    right: null,\n    top: null\n  };\n  var hideOptions = {\n    width: null,\n    height: null,\n    fontWeight: 'normal',\n    background: 'none',\n    right: null,\n    top: null\n    /* function calls and adding eventListeners */\n\n  };\n  onLoad();\n  window.addEventListener('resize', function () {\n    switchFlag = false;\n    resetJsStyles();\n    onLoad();\n  }); // android.switcher.addEventListener('click', doSlide(android, ios))\n\n  ios.switcher.addEventListener('click',\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n    return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!switchFlag && !ios.isShow)) {\n              _context.next = 5;\n              break;\n            }\n\n            switchFlag = true;\n            _context.next = 4;\n            return doSlide(ios, android, ios.switcher);\n\n          case 4:\n            switchFlag = false;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  ios.phone.addEventListener('click',\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n    return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(!switchFlag && !ios.isShow)) {\n              _context2.next = 5;\n              break;\n            }\n\n            switchFlag = true;\n            _context2.next = 4;\n            return doSlide(ios, android, ios.switcher);\n\n          case 4:\n            switchFlag = false;\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n  android.switcher.addEventListener('click',\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n    return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(!switchFlag && !android.isShow)) {\n              _context3.next = 5;\n              break;\n            }\n\n            switchFlag = true;\n            _context3.next = 4;\n            return doSlide(android, ios, android.switcher);\n\n          case 4:\n            switchFlag = false;\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n  android.phone.addEventListener('click',\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {\n    return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(!switchFlag && !android.isShow)) {\n              _context4.next = 5;\n              break;\n            }\n\n            switchFlag = true;\n            _context4.next = 4;\n            return doSlide(android, ios, android.switcher);\n\n          case 4:\n            switchFlag = false;\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })));\n  /* functions declaration */\n\n  function getOptions() {\n    //for getting width, height and margin in vw\n    var widthOfScreen = window.innerWidth; //for getting showOptions and hideOptions\n\n    if (android.phone.getBoundingClientRect().width > ios.phone.getBoundingClientRect().width) {\n      setSize(ios.phone, 'hide');\n      setSize(android.phone, 'show');\n      showOptions.right = parseFloat(getPropertyOfElement(android.phone, 'right')) / widthOfScreen * 100;\n      hideOptions.right = parseFloat(getPropertyOfElement(ios.phone, 'right')) / widthOfScreen * 100;\n      showOptions.top = parseFloat(getPropertyOfElement(android.phone, 'top')) / widthOfScreen * 100;\n      hideOptions.top = parseFloat(getPropertyOfElement(ios.phone, 'top')) / widthOfScreen * 100;\n      android.isShow = true;\n      ios.isShow = false;\n    } else {\n      setSize(android.phone, 'hide');\n      setSize(ios.phone, 'show');\n      showOptions.right = parseFloat(getPropertyOfElement(ios.phone, 'right')) / widthOfScreen * 100;\n      hideOptions.right = parseFloat(getPropertyOfElement(android.phone, 'right')) / widthOfScreen * 100;\n      showOptions.top = parseFloat(getPropertyOfElement(ios.phone, 'top')) / widthOfScreen * 100;\n      hideOptions.top = parseFloat(getPropertyOfElement(android.phone, 'top')) / widthOfScreen * 100;\n      ios.isShow = true;\n      android.isShow = false;\n    } //setting size(width, height) to showOptions and hideOptions\n\n\n    function setSize(phone, mod) {\n      var width = phone.getBoundingClientRect().width;\n      var height = phone.getBoundingClientRect().height;\n\n      if (mod === 'show') {\n        showOptions.width = width / widthOfScreen * 100;\n        showOptions.height = height / widthOfScreen * 100;\n      } else {\n        hideOptions.width = width / widthOfScreen * 100;\n        hideOptions.height = height / widthOfScreen * 100;\n      }\n    } //helper function(for getting margin)\n\n\n    function getPropertyOfElement(element, property) {\n      if (element.style[property] === '') {\n        return element.currentStyle ? element.currentStyle[property] : getComputedStyle(element, null)[property];\n      } else return element.style[property];\n    }\n  }\n\n  function doSlide(selectedPhone, anotherPhone, context) {\n    return new Promise(function (resolve) {\n      var flag = false;\n      var timeSettings = {\n        speedOfStepRight: 1.5,\n        interval: 5,\n        time: 350\n      };\n      var startAnimate;\n      var forShow = {\n        stepW: hideOptions.width,\n        stepH: hideOptions.height,\n        stepR: hideOptions.right,\n        stepT: hideOptions.top\n      };\n      var forHide = {\n        stepW: showOptions.width,\n        stepH: showOptions.height,\n        stepR: showOptions.right,\n        stepT: showOptions.top\n      };\n\n      if (!selectedPhone.isShow) {\n        var stepWidth = (showOptions.width - hideOptions.width) / (timeSettings.time / timeSettings.interval);\n        var stepHeight = (showOptions.height - hideOptions.height) / (timeSettings.time / timeSettings.interval);\n        var stepRight = (hideOptions.right - showOptions.right) / (timeSettings.time / timeSettings.interval) * timeSettings.speedOfStepRight;\n        var stepTop = (hideOptions.top - showOptions.top) / (timeSettings.time / timeSettings.interval);\n        startAnimate = setInterval(function () {\n          animate({\n            stepWidth: stepWidth,\n            stepHeight: stepHeight,\n            stepRight: stepRight,\n            stepTop: stepTop,\n            selectedPhone: selectedPhone,\n            anotherPhone: anotherPhone\n          });\n        }, timeSettings.interval);\n      }\n\n      function animateCallback(selectedPhone, anotherPhone) {\n        flag = false;\n        selectedPhone.phone.style.right = \"\".concat(showOptions.right, \"vw\");\n        selectedPhone.phone.style.top = \"-\".concat(showOptions.top, \"vw\");\n        selectedPhone.phone.style.width = \"\".concat(showOptions.width, \"vw\");\n        selectedPhone.phone.style.height = \"\".concat(showOptions.height, \"vw\");\n        anotherPhone.phone.style.right = \"\".concat(hideOptions.right, \"vw\");\n        anotherPhone.phone.style.top = \"\".concat(hideOptions.top, \"vw\");\n        anotherPhone.phone.style.width = \"\".concat(hideOptions.width, \"vw\");\n        anotherPhone.phone.style.height = \"\".concat(hideOptions.height, \"vw\");\n        selectedPhone.isShow = true;\n        anotherPhone.isShow = false;\n        selectedPhone.circle.style.background = showOptions.background;\n        selectedPhone.text.style.fontWeight = showOptions.fontWeight;\n        anotherPhone.circle.style.background = hideOptions.background;\n        anotherPhone.text.style.fontWeight = hideOptions.fontWeight;\n      }\n\n      function animate(_ref5) {\n        var stepWidth = _ref5.stepWidth,\n            stepHeight = _ref5.stepHeight,\n            stepRight = _ref5.stepRight,\n            stepTop = _ref5.stepTop,\n            selectedPhone = _ref5.selectedPhone,\n            anotherPhone = _ref5.anotherPhone;\n\n        (function () {\n          forShow.stepW += stepWidth;\n          forShow.stepH += stepHeight;\n          forHide.stepW -= stepWidth;\n          forHide.stepH -= stepHeight;\n          forHide.stepT += stepTop;\n          forShow.stepT -= stepTop;\n\n          if (forHide.stepR <= hideOptions.right + (timeSettings.speedOfStepRight - 1) / 2 * hideOptions.right && !flag) {\n            forHide.stepR += stepRight;\n            forShow.stepR -= stepRight;\n          } else {\n            if (!flag) {\n              selectedPhone.phone.style.zIndex = 2;\n              anotherPhone.phone.style.zIndex = 1;\n              flag = true;\n            }\n\n            forHide.stepR -= stepRight;\n            forShow.stepR += stepRight;\n          }\n\n          selectedPhone.phone.style.right = \"\".concat(forShow.stepR, \"vw\");\n          selectedPhone.phone.style.top = \"\".concat(forShow.stepT, \"vw\");\n          selectedPhone.phone.style.width = \"\".concat(forShow.stepW, \"vw\");\n          selectedPhone.phone.style.height = \"\".concat(forShow.stepH, \"vw\");\n          anotherPhone.phone.style.top = \"\".concat(forHide.stepT, \"vw\");\n          anotherPhone.phone.style.right = \"\".concat(forHide.stepR, \"vw\");\n          anotherPhone.phone.style.width = \"\".concat(forHide.stepW, \"vw\");\n          anotherPhone.phone.style.height = \"\".concat(forHide.stepH, \"vw\");\n        })();\n\n        if (forShow.stepT <= showOptions.top) {\n          clearInterval(startAnimate);\n          animateCallback(selectedPhone, anotherPhone);\n          resolve();\n        }\n      }\n    });\n  }\n\n  function setSwitchOptions() {\n    if (android.isShow) {\n      android.circle.style.background = showOptions.background;\n      android.text.style.fontWeight = showOptions.fontWeight;\n      ios.circle.style.background = hideOptions.background;\n      ios.text.style.fontWeight = hideOptions.fontWeight;\n    } else {\n      ios.circle.style.background = showOptions.background;\n      ios.text.style.fontWeight = showOptions.fontWeight;\n      android.circle.style.background = hideOptions.background;\n      android.text.style.fontWeight = hideOptions.fontWeight;\n    }\n  }\n\n  function resetJsStyles() {\n    android.phone.style.right = '';\n    android.phone.style.top = '';\n    android.phone.style.width = '';\n    android.phone.style.height = '';\n    android.phone.style.zIndex = '';\n    ios.phone.style.right = '';\n    ios.phone.style.top = '';\n    ios.phone.style.width = '';\n    ios.phone.style.height = '';\n    ios.phone.style.zIndex = '';\n  }\n\n  function onLoad() {\n    getOptions();\n    setSwitchOptions();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/headerAnimations.js\n");

/***/ }),

/***/ "./source/js/main.js":
/*!***************************!*\
  !*** ./source/js/main.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _headerAnimations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headerAnimations */ \"./source/js/headerAnimations.js\");\n/* harmony import */ var _slider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slider */ \"./source/js/slider.js\");\n/* harmony import */ var _slider__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_slider__WEBPACK_IMPORTED_MODULE_1__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zb3VyY2UvanMvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NvdXJjZS9qcy9tYWluLmpzPzA0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2hlYWRlckFuaW1hdGlvbnMnXHJcbmltcG9ydCAnLi9zbGlkZXInIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/js/main.js\n");

/***/ }),

/***/ "./source/js/slider.js":
/*!*****************************!*\
  !*** ./source/js/slider.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nwindow.addEventListener('load', function () {\n  new GnativeCarousel({\n    itemsContainer: '#GnativeCarousel__itemsContainer',\n    staticItem: '#GnativeCarousel__staticItem',\n    btnsContainer: '#GnativeCarousel__buttons',\n    btnNext: '#GnativeCarousel__btnNext',\n    btnPrev: '#GnativeCarousel__btnPrev',\n    animationTime: 400,\n    responsive: true,\n    breakpoints: [1360, 1100, 768]\n  }).createSlider();\n});\n\nvar GnativeCarousel =\n/*#__PURE__*/\nfunction () {\n  function GnativeCarousel(settings) {\n    var _this = this;\n\n    _classCallCheck(this, GnativeCarousel);\n\n    _defineProperty(this, \"createClickNext\", function () {\n      _this.stackNext++;\n\n      if (_this.stackNext === 1 && _this.stackPrev === 0) {\n        _this.stackWatcher();\n      }\n\n      if (_this.stackPrev !== 0) _this.stackPrev = 1;\n    });\n\n    _defineProperty(this, \"createClickPrev\", function () {\n      _this.stackPrev++;\n\n      if (_this.stackPrev === 1 && _this.stackNext === 0) {\n        _this.stackWatcher();\n      }\n\n      if (_this.stackNext !== 0) _this.stackNext = 1;\n    });\n\n    _defineProperty(this, \"getFirstTouch\", function (e) {\n      _this.itemsContainer.addEventListener('touchend', _this.getTouchEnd);\n\n      _this.firstTouchX = e.touches[0].clientX;\n      _this.firstTouchY = e.touches[0].clientY;\n\n      _this.itemsContainer.removeEventListener('touchstart', _this.getFirstTouch);\n    });\n\n    _defineProperty(this, \"getTouchEnd\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var direction;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.itemsContainer.removeEventListener('touchend', _this.getTouchEnd);\n\n                direction = Math.abs(_this.firstTouchX - e.changedTouches[0].clientX) > Math.abs(_this.firstTouchY - e.changedTouches[0].clientY);\n\n                if (!direction) {\n                  _context.next = 10;\n                  break;\n                }\n\n                if (!(_this.firstTouchX > e.changedTouches[0].clientX)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 6;\n                return _this.animationBehavior('toNext');\n\n              case 6:\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return _this.animationBehavior('toPrev');\n\n              case 10:\n                _this.itemsContainer.addEventListener('touchstart', _this.getFirstTouch);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    this.defaultSettings = {\n      animationTime: 300,\n      itemsContainer: undefined,\n      staticItem: undefined,\n      btnsContainer: undefined,\n      btnNext: undefined,\n      btnPrev: undefined,\n      responsive: false,\n      breakpoints: []\n    };\n    this.finalSettings = this.mergeSettings(this.defaultSettings, settings); //for rebuilding Slider on resize\n\n    this.flagForRebuilding = null; //table of virtual positions which is filled in the setTableOfPositions() {width, height, left, zIndex, invert}\n\n    this.tableOfPositions = {}; //{[actual position of item in array]: [virtual position]}. This is filled in setItemsMap()\n\n    this.itemsMap = {}; //This is filled in setTableOfSteps(). \n    //{stepWidth: { toPrev: null, toNext: null }, stepHeight: { ..., ...},stepLeft: {...,...},stepInvert:{...,...}\n\n    this.tableOfSteps = {}; //\n\n    this.timeOptions = {\n      animationTime: this.finalSettings.animationTime,\n      interval: 5,\n      perToRight: 20 //for swipe functions: getFirstTouch(), getTouchEnd(); and listeners in setEventListeners()\n\n    };\n    this.firstTouchX = 0;\n    this.firstTouchY = 0; //for the stack of calls\n\n    this.stackNext = 0;\n    this.stackPrev = 0;\n    this.itemsContainer = document.querySelector(this.finalSettings.itemsContainer);\n    this.staticItem = document.querySelector(this.finalSettings.staticItem);\n    this.items = this.itemsContainer.children;\n    this.btnsContainer = document.querySelector(this.finalSettings.btnsContainer);\n    this.btnNext = document.querySelector(this.finalSettings.btnNext);\n    this.btnPrev = document.querySelector(this.finalSettings.btnPrev);\n  }\n\n  _createClass(GnativeCarousel, [{\n    key: \"isNode\",\n    value: function isNode(node) {\n      return node && (node.nodeType === 1 || node.nodeType == 11);\n    }\n  }, {\n    key: \"getPropertyOfElement\",\n    value: function getPropertyOfElement(element, property) {\n      if (element.style[property] === '') {\n        return element.currentStyle ? element.currentStyle[property] : getComputedStyle(element, null)[property];\n      } else return element.style[property];\n    }\n  }, {\n    key: \"mergeSettings\",\n    value: function mergeSettings(defaultSettings, settings) {\n      return Object.assign(defaultSettings, settings);\n    } //reset all js style which were added to elements before new building on resize\n\n  }, {\n    key: \"resetJsStyles\",\n    value: function resetJsStyles() {\n      this.staticItem.style.left = '';\n      this.btnsContainer.style.zIndex = '';\n\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style.width = '';\n        this.items[i].style.height = '';\n        this.items[i].style.left = '';\n        this.items[i].style.zIndex = '';\n        this.items[i].style.filter = '';\n      }\n    }\n  }, {\n    key: \"centeringTheStaticItem\",\n    value: function centeringTheStaticItem() {\n      var containerWidth = this.itemsContainer.getBoundingClientRect().width;\n      var staticItemWidth = this.staticItem.getBoundingClientRect().width;\n      var left = (containerWidth - staticItemWidth) / 2 / containerWidth * 100;\n      this.staticItem.style.left = \"\".concat(left, \"%\");\n    } //for this.tableOfPositions\n\n  }, {\n    key: \"setTableOfPositions\",\n    value: function setTableOfPositions() {\n      var containerWidth = this.itemsContainer.getBoundingClientRect().width;\n      var containerHeight = this.itemsContainer.getBoundingClientRect().height; //getting any element\n\n      var itemWidth = this.items[0].getBoundingClientRect().width;\n      var mainElement = Math.floor(this.items.length / 2);\n      this.btnsContainer.style.zIndex = \"\".concat(mainElement + 3);\n      this.tableOfPositions[mainElement] = {\n        width: itemWidth / containerWidth * 100,\n        height: this.items[0].getBoundingClientRect().height / containerHeight * 100,\n        left: (containerWidth - itemWidth) / 2 / containerWidth * 100,\n        zIndex: mainElement + 2,\n        opacity: 1,\n        invert: 0\n      };\n\n      for (var i = mainElement - 1; i >= 0; i--) {\n        var width = void 0;\n        var height = void 0;\n        var left = void 0;\n        var zIndex = i + 1;\n        var invert = void 0; //first part of positions\n\n        if (mainElement - 1 === i) {\n          this.staticItem.style.zIndex = mainElement + 1;\n          width = this.tableOfPositions[mainElement].width - this.tableOfPositions[mainElement].width / 100 * 15;\n          height = this.tableOfPositions[mainElement].height - this.tableOfPositions[mainElement].height / 100 * 15;\n          left = this.tableOfPositions[mainElement].left - width / 100 * 60;\n          invert = 0.05;\n        } else {\n          width = this.tableOfPositions[i + 1].width - this.tableOfPositions[i + 1].width / 100 * 5;\n          height = this.tableOfPositions[i + 1].height - this.tableOfPositions[i + 1].height / 100 * 5;\n          left = this.tableOfPositions[i + 1].left - width / 100 * 15;\n          invert = this.tableOfPositions[i + 1].invert + 0.05;\n        }\n\n        this.tableOfPositions[i] = {\n          width: width,\n          height: height,\n          left: left,\n          zIndex: zIndex,\n          invert: invert\n        };\n      } //second part of positions\n\n\n      for (var _i = mainElement + 1; _i < this.items.length; _i++) {\n        var _width = void 0;\n\n        var _height = void 0;\n\n        var _left = void 0;\n\n        var _zIndex = this.items.length - _i;\n\n        var _invert = void 0;\n\n        if (mainElement + 1 === _i) {\n          _width = this.tableOfPositions[mainElement].width - this.tableOfPositions[mainElement].width / 100 * 15;\n          _height = this.tableOfPositions[mainElement].height - this.tableOfPositions[mainElement].height / 100 * 15;\n          _left = this.tableOfPositions[mainElement].left + this.tableOfPositions[mainElement].width - _width / 100 * 40;\n          _invert = 0.1;\n        } else {\n          _width = this.tableOfPositions[_i - 1].width - this.tableOfPositions[_i - 1].width / 100 * 5;\n          _height = this.tableOfPositions[_i - 1].height - this.tableOfPositions[_i - 1].height / 100 * 5;\n          _left = this.tableOfPositions[_i - 1].left + this.tableOfPositions[_i - 1].width - _width / 100 * 85;\n          _invert = this.tableOfPositions[_i - 1].invert + 0.1;\n        }\n\n        this.tableOfPositions[_i] = {\n          width: _width,\n          height: _height,\n          left: _left,\n          zIndex: _zIndex,\n          invert: _invert\n        };\n      }\n\n      console.log('setTableOfPosition', this.tableOfPositions);\n    } //for this.itemsMap\n\n  }, {\n    key: \"setItemsMap\",\n    value: function setItemsMap() {\n      for (var i = 0; i < this.items.length; i++) {\n        this.itemsMap[i] = i;\n      }\n\n      console.log('setItemsMap', this.itemsMap);\n    } //for this.tableOfSteps\n\n  }, {\n    key: \"setTableOfSteps\",\n    value: function setTableOfSteps() {\n      var countOfSteps = this.timeOptions.animationTime / this.timeOptions.interval;\n\n      for (var i = 0; i < this.items.length; i++) {\n        var buffer = {\n          stepWidth: {\n            toPrev: null,\n            toNext: null\n          },\n          stepHeight: {\n            toPrev: null,\n            toNext: null\n          },\n          stepLeft: {\n            toPrev: null,\n            toNext: null\n          },\n          stepInvert: {\n            toPrev: null,\n            toNext: null\n          }\n        };\n\n        if (i === 0) {\n          buffer.stepWidth.toPrev = (this.tableOfPositions[i + 1].width - this.tableOfPositions[i].width) / countOfSteps;\n          buffer.stepWidth.toNext = false;\n          buffer.stepHeight.toPrev = (this.tableOfPositions[i + 1].height - this.tableOfPositions[i].height) / countOfSteps;\n          buffer.stepHeight.toNext = false;\n          buffer.stepInvert.toPrev = (this.tableOfPositions[i + 1].invert - this.tableOfPositions[i].invert) / countOfSteps;\n          buffer.stepInvert.toNext = false;\n          buffer.stepLeft.toPrev = (this.tableOfPositions[i + 1].left - this.tableOfPositions[i].left) / countOfSteps;\n          buffer.stepLeft.toNext = (this.tableOfPositions[this.items.length - 1].left - this.tableOfPositions[0].left) / countOfSteps;\n        } else if (i === this.items.length - 1) {\n          buffer.stepWidth.toPrev = false;\n          buffer.stepWidth.toNext = (this.tableOfPositions[i - 1].width - this.tableOfPositions[i].width) / countOfSteps;\n          buffer.stepHeight.toPrev = false;\n          buffer.stepHeight.toNext = (this.tableOfPositions[i - 1].height - this.tableOfPositions[i].height) / countOfSteps;\n          buffer.stepInvert.toPrev = false;\n          buffer.stepInvert.toNext = (this.tableOfPositions[i - 1].invert - this.tableOfPositions[i].invert) / countOfSteps;\n          buffer.stepLeft.toPrev = (this.tableOfPositions[0].left - this.tableOfPositions[i].left) / countOfSteps;\n          buffer.stepLeft.toNext = (this.tableOfPositions[i - 1].left - this.tableOfPositions[i].left) / countOfSteps;\n        } else {\n          buffer.stepWidth.toPrev = (this.tableOfPositions[i + 1].width - this.tableOfPositions[i].width) / countOfSteps;\n          buffer.stepWidth.toNext = (this.tableOfPositions[i - 1].width - this.tableOfPositions[i].width) / countOfSteps;\n          buffer.stepHeight.toPrev = (this.tableOfPositions[i + 1].height - this.tableOfPositions[i].height) / countOfSteps;\n          buffer.stepHeight.toNext = (this.tableOfPositions[i - 1].height - this.tableOfPositions[i].height) / countOfSteps;\n          buffer.stepInvert.toPrev = (this.tableOfPositions[i + 1].invert - this.tableOfPositions[i].invert) / countOfSteps;\n          buffer.stepInvert.toNext = (this.tableOfPositions[i - 1].invert - this.tableOfPositions[i].invert) / countOfSteps;\n          buffer.stepLeft.toPrev = (this.tableOfPositions[i + 1].left - this.tableOfPositions[i].left) / countOfSteps;\n          buffer.stepLeft.toNext = (this.tableOfPositions[i - 1].left - this.tableOfPositions[i].left) / countOfSteps;\n        }\n\n        this.tableOfSteps[i] = buffer;\n      }\n\n      console.log('setTableOfSteps', this.tableOfSteps);\n    } //building actual elements into virtual positions by tableOfPosition\n\n  }, {\n    key: \"alignmentOfItems\",\n    value: function alignmentOfItems() {\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style.width = \"\".concat(this.tableOfPositions[i].width, \"%\");\n        this.items[i].style.height = \"\".concat(this.tableOfPositions[i].height, \"%\");\n        this.items[i].style.left = \"\".concat(this.tableOfPositions[i].left, \"%\");\n        this.items[i].style.zIndex = \"\".concat(this.tableOfPositions[i].zIndex);\n        this.items[i].style.filter = \"invert(\".concat(this.tableOfPositions[i].invert, \")\");\n      }\n    }\n  }, {\n    key: \"animationBehavior\",\n    value: function animationBehavior(direction) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        //changing virtual positions numbers for actual elements in itemsMap after animation\n        //and setting items on correct virtual positions\n        var callback = function callback(direction) {\n          if (direction === 'toPrev') {\n            var firstForLast = _this2.itemsMap[0];\n\n            for (var i = 0; i < _this2.items.length; i++) {\n              i === _this2.items.length - 1 ? _this2.itemsMap[i] = firstForLast : _this2.itemsMap[i] = _this2.itemsMap[i + 1];\n            }\n          } else {\n            var lastForFirst = _this2.itemsMap[_this2.items.length - 1];\n\n            for (var _i2 = _this2.items.length - 1; _i2 >= 0; _i2--) {\n              _i2 === 0 ? _this2.itemsMap[_i2] = lastForFirst : _this2.itemsMap[_i2] = _this2.itemsMap[_i2 - 1];\n            }\n          }\n\n          console.log('animationBehavior itemsMap{fact: virt}: ', _this2.itemsMap);\n\n          for (var _i3 = 0; _i3 < _this2.items.length; _i3++) {\n            _this2.items[_i3].style.width = \"\".concat(_this2.tableOfPositions[_this2.itemsMap[_i3]].width, \"%\");\n            _this2.items[_i3].style.height = \"\".concat(_this2.tableOfPositions[_this2.itemsMap[_i3]].height, \"%\");\n            _this2.items[_i3].style.left = \"\".concat(_this2.tableOfPositions[_this2.itemsMap[_i3]].left, \"%\");\n            _this2.items[_i3].style.zIndex = \"\".concat(_this2.tableOfPositions[_this2.itemsMap[_i3]].zIndex);\n            _this2.items[_i3].style.filter = \"invert(\".concat(_this2.tableOfPositions[_this2.itemsMap[_i3]].invert, \")\");\n          }\n        }; //variable for start and stop setInterval\n\n\n        var startAnimate;\n        var amountOfSteps = _this2.timeOptions.animationTime / _this2.timeOptions.interval; //current step number\n\n        var numberOfStep = 0; //number of main element(element which stays in center upon reload)\n\n        var mainElement = Math.floor(_this2.items.length / 2);\n        var numOfMissedSteps = Math.round(amountOfSteps / 100 * _this2.timeOptions.perToRight);\n        var numOfRemainingSteps = amountOfSteps / 100 * (100 - _this2.timeOptions.perToRight);\n        var plusWidth = _this2.tableOfSteps[mainElement - 1].stepWidth[direction] * numOfMissedSteps / numOfRemainingSteps;\n        var plusHeight = _this2.tableOfSteps[mainElement - 1].stepHeight[direction] * numOfMissedSteps / numOfRemainingSteps;\n        var hiddenWidth = _this2.tableOfPositions[mainElement - 1].width / 100 * 40;\n        var stepLeftToRight = hiddenWidth / (amountOfSteps / 100 * _this2.timeOptions.perToRight); //for changing zIndex for only one time in setInterval\n\n        var zIndexFlag = false; //function that make non linear animation\n\n        var trajectoryChanger = function trajectoryChanger(i, direction) {\n          //non linear animation for elements which are next to main element\n          if (_this2.itemsMap[i] === mainElement - 1 || _this2.itemsMap[i] === mainElement + 1) {\n            //if we are going back\n            if (direction === 'toPrev' && _this2.itemsMap[i] === mainElement - 1) {\n              if (numberOfStep < numOfMissedSteps) {\n                _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + stepLeftToRight * -1, \"%\");\n              } else {\n                if (!zIndexFlag) {\n                  _this2.items[i].style.zIndex = mainElement + 2;\n                  _this2.items[i === _this2.items.length - 1 ? 0 : i + 1].style.zIndex = mainElement + 1;\n                  zIndexFlag = true;\n                } //product of all missed steps + sum of hidden width an element / remaining steps\n\n\n                var plusToLeft = (_this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction] * numOfMissedSteps + hiddenWidth) / numOfRemainingSteps;\n                _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + (_this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction] + plusToLeft), \"%\");\n                _this2.items[i].style.width = \"\".concat(parseFloat(_this2.items[i].style.width) + _this2.tableOfSteps[_this2.itemsMap[i]].stepWidth[direction] + plusWidth, \"%\");\n                _this2.items[i].style.height = \"\".concat(parseFloat(_this2.items[i].style.height) + _this2.tableOfSteps[_this2.itemsMap[i]].stepHeight[direction] + plusHeight, \"%\");\n              } //if we are going forward \n\n            } else if (direction === 'toNext' && _this2.itemsMap[i] === mainElement + 1) {\n              if (numberOfStep < numOfMissedSteps) {\n                _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + stepLeftToRight, \"%\");\n              } else {\n                if (!zIndexFlag) {\n                  _this2.items[i].style.zIndex = mainElement + 2;\n                  _this2.items[i === 0 ? _this2.items.length - 1 : i - 1].style.zIndex = mainElement + 1;\n                  zIndexFlag = true;\n                }\n\n                var _plusToLeft = (Math.abs(_this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction] * numOfMissedSteps) + hiddenWidth) / numOfRemainingSteps * -1;\n\n                _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + (_this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction] + _plusToLeft), \"%\");\n                _this2.items[i].style.width = \"\".concat(parseFloat(_this2.items[i].style.width) + _this2.tableOfSteps[_this2.itemsMap[i]].stepWidth[direction] + plusWidth, \"%\");\n                _this2.items[i].style.height = \"\".concat(parseFloat(_this2.items[i].style.height) + _this2.tableOfSteps[_this2.itemsMap[i]].stepHeight[direction] + plusHeight, \"%\");\n              }\n            } else {\n              _this2.items[i].style.width = \"\".concat(parseFloat(_this2.items[i].style.width) + _this2.tableOfSteps[_this2.itemsMap[i]].stepWidth[direction], \"%\");\n              _this2.items[i].style.height = \"\".concat(parseFloat(_this2.items[i].style.height) + _this2.tableOfSteps[_this2.itemsMap[i]].stepHeight[direction], \"%\");\n              _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + _this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction], \"%\");\n            } //linear animation for elements which aren't next to main element\n\n          } else _this2.items[i].style.left = \"\".concat(parseFloat(_this2.items[i].style.left) + _this2.tableOfSteps[_this2.itemsMap[i]].stepLeft[direction], \"%\");\n        }; //animation function\n\n\n        var animation = function animation(direction) {\n          numberOfStep++;\n\n          for (var i = 0; i < _this2.items.length; i++) {\n            if (!(_this2.itemsMap[i] === mainElement - 1) && !(_this2.itemsMap[i] === mainElement + 1)) {\n              // console.log(i)\n              _this2.items[i].style.width = \"\".concat(parseFloat(_this2.items[i].style.width) + _this2.tableOfSteps[_this2.itemsMap[i]].stepWidth[direction], \"%\");\n              _this2.items[i].style.height = \"\".concat(parseFloat(_this2.items[i].style.height) + _this2.tableOfSteps[_this2.itemsMap[i]].stepHeight[direction], \"%\");\n            } //todo may be it also needs change\n            // this.items[i].style.filter = `invert(${parseInt(this.items[i].style.filter) + this.tableOfSteps[i].invert[direction]})`\n\n\n            trajectoryChanger(i, direction); //changing zIndex on the fly for an element which is last in tableOfPositions\n\n            if (numberOfStep === amountOfSteps / 2 && _this2.itemsMap[i] === _this2.items.length - 1 && direction === 'toPrev') {\n              _this2.items[i].style.zIndex = '0';\n            } //changing zIndex on the fly for an element which is first in tableOfPositions\n\n\n            if (numberOfStep === amountOfSteps / 2 && _this2.itemsMap[i] === 0 && direction === 'toNext') {\n              _this2.items[i].style.zIndex = '0';\n            }\n          } //if current step >= amount of steps, we stop animation and call callback function\n\n\n          if (numberOfStep >= amountOfSteps) {\n            clearInterval(startAnimate);\n            callback(direction);\n            resolve();\n          }\n        }; //start of animation\n\n\n        startAnimate = setInterval(function () {\n          animation(direction);\n        }, 5);\n      });\n    }\n  }, {\n    key: \"createSlider\",\n    value: function createSlider() {\n      this.centeringTheStaticItem();\n      this.setTableOfPositions();\n      this.setItemsMap();\n      this.setTableOfSteps();\n      this.alignmentOfItems();\n      this.setEventListeners();\n    }\n  }, {\n    key: \"stackWatcher\",\n    value: function () {\n      var _stackWatcher = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.stackNext > 0)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.animationBehavior('toNext');\n\n              case 3:\n                this.stackNext--;\n                this.stackWatcher();\n                _context2.next = 12;\n                break;\n\n              case 7:\n                if (!(this.stackPrev > 0)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 10;\n                return this.animationBehavior('toPrev');\n\n              case 10:\n                this.stackPrev--;\n                this.stackWatcher();\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function stackWatcher() {\n        return _stackWatcher.apply(this, arguments);\n      }\n\n      return stackWatcher;\n    }() //increase stack of calls for a next slide and then call stackWatcher()\n\n  }, {\n    key: \"setEventListeners\",\n\n    /*== touch event for mobile ==*/\n    value: function setEventListeners() {\n      var _this3 = this;\n\n      //if slider is responsive\n      if (this.finalSettings.responsive) {\n        window.addEventListener('resize', function () {\n          for (var i = _this3.finalSettings.breakpoints.length - 1; i >= 0; i--) {\n            if (_this3.finalSettings.breakpoints[i] > window.innerWidth) {\n              if (_this3.flagForRebuilding !== _this3.finalSettings.breakpoints[i].toString()) {\n                _this3.flagForRebuilding = _this3.finalSettings.breakpoints[i].toString();\n\n                _this3.resetJsStyles();\n\n                _this3.createSlider();\n\n                return false;\n              }\n\n              if (_this3.flagForRebuilding === _this3.finalSettings.breakpoints[i].toString()) {\n                return false;\n              }\n            } else if (i === 0 && _this3.flagForRebuilding !== 'large') {\n              _this3.flagForRebuilding = 'large';\n\n              _this3.resetJsStyles();\n\n              _this3.createSlider();\n\n              return true;\n            }\n          }\n        });\n      }\n\n      this.itemsContainer.addEventListener('touchstart', this.getFirstTouch);\n      this.itemsContainer.addEventListener('touchend', this.getTouchEnd);\n\n      if (this.isNode(this.btnNext) && this.isNode(this.btnPrev)) {\n        this.btnNext.addEventListener('click', this.createClickNext);\n        this.btnPrev.addEventListener('click', this.createClickPrev);\n      }\n    }\n  }]);\n\n  return GnativeCarousel;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/slider.js\n");

/***/ })

/******/ });